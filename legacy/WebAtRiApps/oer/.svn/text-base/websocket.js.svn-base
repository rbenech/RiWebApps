/*jslint devel: true, browser: true, continue: true, windows: false, vars: true, evil: true, white: true, nomen: true, plusplus: true, maxerr: 50, indent: 4 */

/**-----------------------------------------------------------------------------------------
  websocket.js. 
  This is the websocket related functionality.
  11/12/2011 oer
  ------------------------------------------------------------------------------------------
*/

var ri = ri || {}; //namespace for the ri module

/**module definition*/
ri.websocket = (function () {
  "use strict"; //enable javascript strict mode
  
  //Dependencies:
  //-------------
  //var emitStatus = ri.util.emitStatus;
  
  //Closure local variables:
  //------------------------
  
  //Closure method definitions:
  //---------------------------

  /**Returns true if the browser supports web sockets*/
  var isWebsocketSupported = function() {
    if(window.WebSocket) { return true; }
    else {                 
      ri.util.emitStatus('Websockets not supported'); //debug
      return false;
    }
  };

  /**Opens a websocket at the specified url. Returns the opened webSocket.
   * receiveFunction is for received messages*/
  var open = function(url, receiveFunction) {
    var w;
    ri.util.emitStatus('Opening Websocket...'); //debug
    if(!isWebsocketSupported()) { return null; } //web sockets not available 
    w = new WebSocket(url);
    w.onopen    = function()  { ri.util.emitStatus('Websocket Opened'); }; //debug. websocket successfully opened
    w.onmessage = function(e) { receiveFunction(e.data); };        //when data comes in over websocket, send it to the specified function
    w.onclose   = function()  { ri.util.emitStatus('Websocket Closed'); }; //debug. websocket successfully closed
    w.onerror   = function(e) { ri.util.emitStatus('Websocket Error: '+e.data); }; //debug. websocket error occurred
    return w;
  };
  
  /**Send given message over the specified websocket*/
  var send = function(w, msg) {
    if(w) { w.send(msg); }
    else { ri.util.emitStatus('WebSocket not open'); } //debug
  };
  
  /**Close the given websocket*/
  var close = function(w) {
    if(!w) { return w; }
    ri.util.emitStatus('Closing Websocket...'); //debug
    w.close();
    w=null;
    return w;
  };

  /*---------------
   *closure return:
   *---------------*/
  return {
    
    //Public API (list functions here to make them publicly available):
    //-----------------------------------------------------------------
    isWebsocketSupported: isWebsocketSupported,
    open: open,
    send: send,
    close: close
  }; //closure return
  
}()); //namespace ri.websocket
